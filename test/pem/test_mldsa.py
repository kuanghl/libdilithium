from pqcrypto.sign.ml_dsa_44 import generate_keypair, sign, verify
from base64 import b64encode, b64decode
    
def ml_dsa_44_sign_verify_for_openssl():
    secret_key = b'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'

    public_key = b'MIIFMjALBglghkgBZQMEAxEDggUhAEPgA1FYXgXc3U3YokGuAwjMkGZGw6WIDfQU\
4pjbEut8k+EDSwSX2ZD9fOQVrD0Y297iBuqPpplRu2kfekWLH6XzXLFiHEwzAwOZ\
JmW7FuyLouIFn0OJKIaesg1VmfFvSU1cDJ1FP7uE7r98jIbw+oda74vPkQKItVIT\
gIZZojuNjC1Lkt+pK9MKzUpjc4RBaRQYsIbwc4BFbzSMIfyu3KvONUmwI41mwaJ4\
zmqG1BB/OheRpavKEGG4z9FTSm7foqNvecAHCqelyGRbTJxVmP71wyK2JDOICGmg\
2jVS/vG0ULdjurNo/pmv9Dn4CAFyCT2/zNcl9z1RE9JtcPn4nO4RtsGiutf19yS2\
ncOcOHgOaJWp/Gc4fEv5237X7cvVPdeT8zI1tEwkMTI8bZw+mrTT/uGt5TWVpcVc\
e9dSsuUdqtezMExjV4b80aXBNqMvD2eY/2wVKP8GV2N8KUJq1F1YtTI3+edRLk06\
dIMYCnX4rCAfhdLIN/KYWlOxVq+PWlV7ndVvJzBbcXnP9wrVxbL0eopmQqoVwv/c\
OLJtiyZC0QVnUxs/hYjy8Z1JdjSL4ZlHnlTO4GuHnOr3NzufVnwl5LYOvvIyBCMl\
FJa6RYpPXWlOe3Wy1JlAlTT6a27kQstgFJ3IcGH4uJ/cWJ8OxxVI8a2Icg5ddXw0\
Pg1+FYM8X169BkioSH8v6waa9K+pYtG9Mg2vYwWRyhFI1oKoFH2NFY9nkDZg8+s0\
V+l1fqNrneF3XLEem5wBJYEkGGqGMXtiOXAijRA4JL1uJrtxt9I2EEWhumaMD1ki\
Rr/yW1xkSn4xZUrdj8mR7R3a7Zc5GSiKAq+ZjSJJ3bzzVKs8cI/rqx579tjUW3Sz\
4Xik1hXWfaqRbsYlyUfPUGB0pRLGncqhalQZ8SdvTHmjMS9V5H1aQu/blTEwINV+\
0s41yZ+S/UTbT2jfTWG+OTJ0MOO524lZOPsd7ANqcefULfDhnQWSr3K/wVvfOFCm\
n5iOrP94WLKu5l3IDAh8gwDXYqCx16ZF/VXzSUAxAi68Mik20dbjrh4k9nrZklkA\
e7NMpJIAjcQfG6h4tFiBUxXQ+j6wxEPnfnm9d1aKohU3qhrccHz55zQFMJcSHbbE\
/KuCo7SZe/zfxsyZPHfpKwbm4X7URB00Zu42FhR/eHuMeQmmg0OhXWpCJSCjtx13\
+aQUD67o+BGViCYtsXzc/U2vmJkgssBIFxfcADOQiHTDIF0zHYXqajfJk28CWltt\
+EY0hY9yBrbDTt+WJx1wz+EO14lHvdYcSekqPE1Z0pFc7tL5a3sb0eDUILqjuO+e\
2BhTyL2Or5pTox2/5FWl/pctwz+i4/AwFyGufLBRDOBvvSgjaNImYq44xSf4pD/s\
Lq0zZ3HpeH/XC3tFSAniWO18WFuSNobJ9JW1MHJdi4ibCVlgMk4GnQJfrbnhxw3+\
U38e71AFQdyuxkajmxBY3hktyPu1dwsmMUiFtlJ3uZbXX69p4mnHJnsyX24jsc5T\
/GOvtcLmmXAOTkMUboKbSyL2/pLK2AaP1ClYGGru/ULVFQsrJv0u0Piveoqsr9++\
QIi2eyayGuArLq05+2s86B7Z3iLzyqqYGeJnyhN7eW8C6wFZAFhP0YanVBW9SbWQ\
vBlD7oVnzzc7ZjnSr+mp4Qj3ZLuHcMNbPK6XJZAI4w+VWvSYD6eHYHXhcZYu+J4E\
O7Lb8CcNng6IBvOHD37T4wK7QYJPOUPYqq8k5nsHZJ0Cy+Cs8NI='

    # https://github.com/open-quantum-safe/liboqs/blob/main/docs/algorithms/sig/ml_dsa.md
    # dumpasn1 -a ./pubkey.der 
    # get keysize is different from openssl generate key
    bintmp = b64decode(secret_key)
    secret_key_bin = bintmp[66:]
    bintmp = b64decode(public_key)
    public_key_bin = bintmp[22:]
    print("openssl private key size %d" % len(b64decode(secret_key)))
    print("openssl public key size %d" % len(b64decode(public_key)))
    print("ml_dsa_44 private key size %d" % len(secret_key_bin))
    print("ml_dsa_44 public key size %d" % len(public_key_bin))
    
    signature = sign(secret_key_bin, b"hello world!\n")
    print("\nml_dsa_44 sign ok size %d\n" % len(signature))
    print(b64encode(signature))
    
    assert verify(public_key_bin, b"hello world!\n", signature)
    print("\nml_dsa_44 verify ok\n")
    
def ml_dsa_44_sign_verify():
    secret_key = b'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'
    public_key = b'rd2veYzYjNmezHG5k12SODtIUIBc0yepjLf7iFGHzm4QgUQ2HzaQELTlwFMN1/I7pH1S9vSN0Bjm2rm67eF+ovLm6O+o4golpQeemuveZjk0+4c/4Ymr0SHo0sj5OjsxHccJ2N5ymvZhxU/NGVo9hdFBniMLUXIbWOKNN5sSBhxLLWmqTo5XDhcDZY8vc0HZvvhIx2Ym/jEHkwuJKpPyOloxQ3RWQr9tljV2Hjpfg8MqlkgqxUuXhzykPVaChY7UYgLMqoJhkbN3ERzhjuV2fAXYzW/Pbli/1vFn3cC/nGrg/7YiLaByGPDaAIP7DN0M25afugPYKdmntDHSbWJl3+ggmGj6lzovNZbWB2ok2F6SgWbvIXkSfoOw/nAIQuyDox7tVZncKB6MTDE/mihKvvSxOFLH+PNmEudWzFjPgp2vI3tx+UhtbxY2srpGqJsO7uDePBTrXsQdF1+bKA3Z1GfGhFXcmDC+R1WyxSCs9BjyJ5bvkf+d8TsoX1lIRUgokWcdqWq7+t/ggCPQidPeLU54pGNT1hLkIIkaa+QGMZTG/B5k2kJiA/W4OpAbEYi8y4MLQ8GJe3ZhRcVkmEMmF6mYrbZqWpn2cb+cUWFl3Qwc4rKcRFmpnFMv4CrNsXhrEvgNACKwiVB6TY5m44XX7Lv7RLKjcRa1KRrngyZJp6VDQ+8vbmvIsO/mxT+VyrOs3zsCuTpA3Ir5vv6hCgUbfiffWkh+J+NczN/CVoYZsrCCSLkKPaAEheKtBov/wVFLXfh8OCgaM1oRjk3b8ziTdIC1WCdrswh5f/itnT50IaO1M8+Lsce2PMOdI7Y5NT2LbVKmM+sQq9TtR1yMFXGe4Lzj8jG+PQXNs2rdsjdog6WZiVjoeb29jp4bonOTBpTYuGdCbWyeNpE0qZKBl5LmXwS4dau3J8Cx8cP3WMxOr1/186C6nMUX75HqZ48ZzuxO8wcs1Bhp0PnB7SeAYBDuZ+zsnKIPJJ1SevGU2VOzk2ugII+wE9tKwMmmxd1imxhN8H904vrxbPAdEFwBxTkVV3OSo5xgsAKkhWeMIaUAsBqJqYM6CClhXU0i+iU4GVgN2SG5stQg3ZHHdqIYTzlLRkV4vtYbF0DKPjh29/i39IxhHCIFCyG8+W9exbla57yslROhav8OnPdOqL+He4CJnr4Pdlk5kYsX3YPFlual3zw8M71B8pBU6ZY/uG3BAr0jI4hQVvWWnRTMbDV4WSSPR6SvsF7BlSXDh+CuKRZIHOVXYq1J9vgDkMuhHrWutR59/I5PbeVla7gqZRydG0EF6bipMxJ+j/peg4OHAbA7S6XmdbgKTLsXf1YLq0KBPtxhv9qInGKOVkROAugWoa3fnCTRvY+bLV2OGKwAaAJXJ9EiZqBCCNcUEsX2geb1kvTPEbop/ROcVD+RUw/hl6UXPtFZOC4CM3StkjcACkiZE1hcbYLKssbuUPvUiKB5mTM+Yf9Cb4U+ljxkHtvpRRo3erc9zWdLdaLsQdDJiYqIqjUXDiiGeoNXzuGuNc/u0B1/2qVGQOQOM39bcLDOZZg5a12E6JeDrvAUH90FVWVrOuiYEZmC7iv24Dn7hR/wqizq6KBKymAo/LDlMfru2l6esHW5P6bgkdUn8DD/t+lmiw9BYIXKAbWZzLn2yFQ+32TDd5u9Enzreo5nR2sCh0iGNCQPshPvoYncf4odGJJ2LFbYOStqBGtFCdO8uGULN8eTG9qCM3HhsVcjJxeyeR9VXg=='

    # msg = b"Hello Word!"
    msg = b"Hello Word!" 
    msg_sig = b'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'

    secret_key_bin = b64decode(secret_key)
    public_key_bin = b64decode(public_key)
    msg_sig_bin = b64decode(msg_sig)
    print(f"msg: {msg.decode('utf-8')}, len: {len(msg)}")
    print("ml_dsa_44 private key size %d" % len(secret_key_bin))
    print("ml_dsa_44 public key size %d" % len(public_key_bin))
    
    assert verify(public_key_bin, msg, msg_sig_bin)
    print("\nml_dsa_44 verify ok\n")     

def main():
    ml_dsa_44_sign_verify_for_openssl()
    ml_dsa_44_sign_verify()

if __name__ == "__main__":
    main()